bslfmt.txt

@PURPOSE: Provide implementation mechanisms for bsl::format.

@MNEMONIC: Basic Standard Library Format Implementation (bslfmt)

@DESCRIPTION: The 'bslfmt' package provides implementation mechanisms for
              bsl::format and associated types.

/Hierarchical Synopsis
/---------------------
 The 'bslfmt' package currently has 28 components having 9 levels of physical
 dependency.  The list below shows the hierarchical ordering of the components.
 The order of components within each level is not architecturally significant,
 just alphabetical.
..
  9. bslfmt_format

  8. bslfmt_format_imp                                                !PRIVATE!

  7. bslfmt_formatterbool
     bslfmt_formattercharacter
     bslfmt_formatterintegral
     bslfmt_formatterpointer

  6. bslfmt_formatterfloating
     bslfmt_formatterintegralbase
     bslfmt_formatterstring
     bslfmt_formattertestutil

  5. bslfmt_mockformatcontext
     bslfmt_standardformatspecification

  4. bslfmt_format_args                                               !PRIVATE!
     bslfmt_formatspecificationparser

  3. bslfmt_format_arg                                                !PRIVATE!
     bslfmt_format_context                                            !PRIVATE!
     bslfmt_formatparsecontext
     bslfmt_formatterspecificationnumericvalue
     bslfmt_mockparsecontext
     bslfmt_unicodecodepoint

  2. bslfmt_format_string                                             !PRIVATE!
     bslfmt_formaterror
     bslfmt_formatterbase
     bslfmt_formattercharutil
     bslfmt_formatterunicodedata

  1. bslfmt_format_arg_cpp03                                          !PRIVATE!
     bslfmt_format_args_cpp03                                         !PRIVATE!
     bslfmt_format_imp_cpp03                                          !PRIVATE!
..

/Component Synopsis
/------------------
: 'bslfmt_format':
:      Provide a standard compliant `format` implementation
:
: 'bslfmt_format_arg':                                                !PRIVATE!
:      Provide a proxy for an argument for use by bsl::format
:
: 'bslfmt_format_arg_cpp03':                                          !PRIVATE!
:      Provide C++03 implementation for bslfmt_format_arg.h
:
: 'bslfmt_format_args':                                               !PRIVATE!
:      Provide a container of arguments for use by bsl::format
:
: 'bslfmt_format_args_cpp03':                                         !PRIVATE!
:      Provide C++03 implementation for bslfmt_format_args.h
:
: 'bslfmt_format_context':                                            !PRIVATE!
:      Provides access to formatting state.
:
: 'bslfmt_format_imp':                                                !PRIVATE!
:      Provide a standard compliant `format` implementation
:
: 'bslfmt_format_imp_cpp03':                                          !PRIVATE!
:      Provide C++03 implementation for bslfmt_format_imp.h
:
: 'bslfmt_format_string':                                             !PRIVATE!
:      Provide a string_view wrapper for formatting library usage
:
: 'bslfmt_formaterror':
:      Provide an exception type for format library errors.
:
: 'bslfmt_formatparsecontext':
:      Provides access to formatting parsing string and parsing state.
:
: 'bslfmt_formatspecificationparser':
:      Tokenization utility for use within BSL `format` spec parsers
:
: 'bslfmt_formatterbase':
:      Provide a base template for formatter specializations.
:
: 'bslfmt_formatterbool':
:      Provide a formatter customization for bool type
:
: 'bslfmt_formattercharacter':
:      Provide a formatter customization for character types
:
: 'bslfmt_formattercharutil':
:      Character conversion utilities for `bsl::format`.
:
: 'bslfmt_formatterfloating':
:      Provide a formatter customization for floating point types
:
: 'bslfmt_formatterintegral':
:      Provide a formatter customization for integer types
:
: 'bslfmt_formatterintegralbase':
:      Provide a formatter customization for integer types
:
: 'bslfmt_formatterpointer':
:      Provide a formatter customization for pointer types
:
: 'bslfmt_formatterspecificationnumericvalue':
:      Integer value for use within `bsl::format` specification parsers
:
: 'bslfmt_formatterstring':
:      Provide a string formatter for use by bsl::format
:
: 'bslfmt_formattertestutil':
:      Provide utilities for testing custom formatters
:
: 'bslfmt_formatterunicodedata':
:      Private unicode data tables for use by `bsl::format`
:
: 'bslfmt_mockformatcontext':
:      Provide mock context to test formatter specializations
:
: 'bslfmt_mockparsecontext':
:      Provide mock context to test formatter specializations
:
: 'bslfmt_standardformatspecification':
:      Private utility for use within BSL `format` standard spec parsers
:
: 'bslfmt_unicodecodepoint':
:      Provide a unicode code point representation
