{
  'variables': {
    'bslmf_sources': [
      'bslmf_addconst.cpp',
      'bslmf_addcv.cpp',
      'bslmf_addlvaluereference.cpp',
      'bslmf_addpointer.cpp',
      'bslmf_addreference.cpp',
      'bslmf_addrvaluereference.cpp',
      'bslmf_addvolatile.cpp',
      'bslmf_arraytopointer.cpp',
      'bslmf_assert.cpp',
      'bslmf_conditional.cpp',
      'bslmf_detectnestedtrait.cpp',
      'bslmf_enableif.cpp',
      'bslmf_forwardingtype.cpp',
      'bslmf_functionpointertraits.cpp',
      'bslmf_haspointersemantics.cpp',
      'bslmf_if.cpp',
      'bslmf_integralconstant.cpp',
      'bslmf_isarithmetic.cpp',
      'bslmf_isarray.cpp',
      'bslmf_isbitwiseequalitycomparable.cpp',
      'bslmf_isbitwisemoveable.cpp',
      'bslmf_isclass.cpp',
      'bslmf_isconst.cpp',
      'bslmf_isconvertible.cpp',
      'bslmf_isenum.cpp',
      'bslmf_isfloatingpoint.cpp',
      'bslmf_isfunction.cpp',
      'bslmf_isfundamental.cpp',
      'bslmf_isintegral.cpp',
      'bslmf_islvaluereference.cpp',
      'bslmf_ismemberfunctionpointer.cpp',
      'bslmf_ismemberobjectpointer.cpp',
      'bslmf_ismemberpointer.cpp',
      'bslmf_ispair.cpp',
      'bslmf_ispointer.cpp',
      'bslmf_ispointertomember.cpp',
      'bslmf_ispolymorphic.cpp',
      'bslmf_isreference.cpp',
      'bslmf_isrvaluereference.cpp',
      'bslmf_issame.cpp',
      'bslmf_istriviallycopyable.cpp',
      'bslmf_istriviallydefaultconstructible.cpp',
      'bslmf_isvoid.cpp',
      'bslmf_isvolatile.cpp',
      'bslmf_matchanytype.cpp',
      'bslmf_matcharithmetictype.cpp',
      'bslmf_memberfunctionpointertraits.cpp',
      'bslmf_metaint.cpp',
      'bslmf_nestedtraitdeclaration.cpp',
      'bslmf_nil.cpp',
      'bslmf_removeconst.cpp',
      'bslmf_removecv.cpp',
      'bslmf_removecvq.cpp',
      'bslmf_removepointer.cpp',
      'bslmf_removereference.cpp',
      'bslmf_removevolatile.cpp',
      'bslmf_selecttrait.cpp',
      'bslmf_switch.cpp',
      'bslmf_tag.cpp',
      'bslmf_typelist.cpp',
    ],
    'bslmf_tests': [
      'bslmf_addconst.t',
      'bslmf_addcv.t',
      'bslmf_addlvaluereference.t',
      'bslmf_addpointer.t',
      'bslmf_addreference.t',
      'bslmf_addrvaluereference.t',
      'bslmf_addvolatile.t',
      'bslmf_arraytopointer.t',
      'bslmf_assert.t',
      'bslmf_conditional.t',
      'bslmf_detectnestedtrait.t',
      'bslmf_enableif.t',
      'bslmf_forwardingtype.t',
      'bslmf_functionpointertraits.t',
      'bslmf_haspointersemantics.t',
      'bslmf_if.t',
      'bslmf_integralconstant.t',
      'bslmf_isarithmetic.t',
      'bslmf_isarray.t',
      'bslmf_isbitwiseequalitycomparable.t',
      'bslmf_isbitwisemoveable.t',
      'bslmf_isclass.t',
      'bslmf_isconst.t',
      'bslmf_isconvertible.t',
      'bslmf_isenum.t',
      'bslmf_isfloatingpoint.t',
      'bslmf_isfunction.t',
      'bslmf_isfundamental.t',
      'bslmf_isintegral.t',
      'bslmf_islvaluereference.t',
      'bslmf_ismemberfunctionpointer.t',
      'bslmf_ismemberobjectpointer.t',
      'bslmf_ismemberpointer.t',
      'bslmf_ispair.t',
      'bslmf_ispointer.t',
      'bslmf_ispointertomember.t',
      'bslmf_ispolymorphic.t',
      'bslmf_isreference.t',
      'bslmf_isrvaluereference.t',
      'bslmf_issame.t',
      'bslmf_istriviallycopyable.t',
      'bslmf_istriviallydefaultconstructible.t',
      'bslmf_isvoid.t',
      'bslmf_isvolatile.t',
      'bslmf_matchanytype.t',
      'bslmf_matcharithmetictype.t',
      'bslmf_memberfunctionpointertraits.t',
      'bslmf_metaint.t',
      'bslmf_nestedtraitdeclaration.t',
      'bslmf_nil.t',
      'bslmf_removeconst.t',
      'bslmf_removecv.t',
      'bslmf_removecvq.t',
      'bslmf_removepointer.t',
      'bslmf_removereference.t',
      'bslmf_removevolatile.t',
      'bslmf_selecttrait.t',
      'bslmf_switch.t',
      'bslmf_tag.t',
      'bslmf_typelist.t',
    ],
    'bslmf_tests_paths': [
      '<(PRODUCT_DIR)/bslmf_addconst.t',
      '<(PRODUCT_DIR)/bslmf_addcv.t',
      '<(PRODUCT_DIR)/bslmf_addlvaluereference.t',
      '<(PRODUCT_DIR)/bslmf_addpointer.t',
      '<(PRODUCT_DIR)/bslmf_addreference.t',
      '<(PRODUCT_DIR)/bslmf_addrvaluereference.t',
      '<(PRODUCT_DIR)/bslmf_addvolatile.t',
      '<(PRODUCT_DIR)/bslmf_arraytopointer.t',
      '<(PRODUCT_DIR)/bslmf_assert.t',
      '<(PRODUCT_DIR)/bslmf_conditional.t',
      '<(PRODUCT_DIR)/bslmf_detectnestedtrait.t',
      '<(PRODUCT_DIR)/bslmf_enableif.t',
      '<(PRODUCT_DIR)/bslmf_forwardingtype.t',
      '<(PRODUCT_DIR)/bslmf_functionpointertraits.t',
      '<(PRODUCT_DIR)/bslmf_haspointersemantics.t',
      '<(PRODUCT_DIR)/bslmf_if.t',
      '<(PRODUCT_DIR)/bslmf_integralconstant.t',
      '<(PRODUCT_DIR)/bslmf_isarithmetic.t',
      '<(PRODUCT_DIR)/bslmf_isarray.t',
      '<(PRODUCT_DIR)/bslmf_isbitwiseequalitycomparable.t',
      '<(PRODUCT_DIR)/bslmf_isbitwisemoveable.t',
      '<(PRODUCT_DIR)/bslmf_isclass.t',
      '<(PRODUCT_DIR)/bslmf_isconst.t',
      '<(PRODUCT_DIR)/bslmf_isconvertible.t',
      '<(PRODUCT_DIR)/bslmf_isenum.t',
      '<(PRODUCT_DIR)/bslmf_isfloatingpoint.t',
      '<(PRODUCT_DIR)/bslmf_isfunction.t',
      '<(PRODUCT_DIR)/bslmf_isfundamental.t',
      '<(PRODUCT_DIR)/bslmf_isintegral.t',
      '<(PRODUCT_DIR)/bslmf_islvaluereference.t',
      '<(PRODUCT_DIR)/bslmf_ismemberfunctionpointer.t',
      '<(PRODUCT_DIR)/bslmf_ismemberobjectpointer.t',
      '<(PRODUCT_DIR)/bslmf_ismemberpointer.t',
      '<(PRODUCT_DIR)/bslmf_ispair.t',
      '<(PRODUCT_DIR)/bslmf_ispointer.t',
      '<(PRODUCT_DIR)/bslmf_ispointertomember.t',
      '<(PRODUCT_DIR)/bslmf_ispolymorphic.t',
      '<(PRODUCT_DIR)/bslmf_isreference.t',
      '<(PRODUCT_DIR)/bslmf_isrvaluereference.t',
      '<(PRODUCT_DIR)/bslmf_issame.t',
      '<(PRODUCT_DIR)/bslmf_istriviallycopyable.t',
      '<(PRODUCT_DIR)/bslmf_istriviallydefaultconstructible.t',
      '<(PRODUCT_DIR)/bslmf_isvoid.t',
      '<(PRODUCT_DIR)/bslmf_isvolatile.t',
      '<(PRODUCT_DIR)/bslmf_matchanytype.t',
      '<(PRODUCT_DIR)/bslmf_matcharithmetictype.t',
      '<(PRODUCT_DIR)/bslmf_memberfunctionpointertraits.t',
      '<(PRODUCT_DIR)/bslmf_metaint.t',
      '<(PRODUCT_DIR)/bslmf_nestedtraitdeclaration.t',
      '<(PRODUCT_DIR)/bslmf_nil.t',
      '<(PRODUCT_DIR)/bslmf_removeconst.t',
      '<(PRODUCT_DIR)/bslmf_removecv.t',
      '<(PRODUCT_DIR)/bslmf_removecvq.t',
      '<(PRODUCT_DIR)/bslmf_removepointer.t',
      '<(PRODUCT_DIR)/bslmf_removereference.t',
      '<(PRODUCT_DIR)/bslmf_removevolatile.t',
      '<(PRODUCT_DIR)/bslmf_selecttrait.t',
      '<(PRODUCT_DIR)/bslmf_switch.t',
      '<(PRODUCT_DIR)/bslmf_tag.t',
      '<(PRODUCT_DIR)/bslmf_typelist.t',
    ],
    'bslmf_pkgdeps': [
      '../bsls/bsls.gyp:bsls',
      '../bslscm/bslscm.gyp:bslscm',
    ],
  },
  'targets': [
    {
      'target_name': 'bslmf_sources',
      'type': 'none',
      'direct_dependent_settings': {
        'sources': [ '<@(bslmf_sources)' ],
        'include_dirs': [ '.' ],
      },
    },
    {
      'target_name': 'bslmf_tests_build',
      'type': 'none',
      'dependencies': [ '<@(bslmf_tests)' ],
    },
    {
      'target_name': 'bslmf_tests_run',
      'type': 'none',
      'dependencies': [ 'bslmf_tests_build' ],
      'sources': [ '<@(bslmf_tests_paths)' ],
      'rules': [
        {
          'rule_name': 'run_unit_tests',
          'extension': 't',
          'inputs': [ '<@(bslmf_tests_paths)' ],
          'outputs': [ '<(INTERMEDIATE_DIR)/<(RULE_INPUT_ROOT).t.ran' ],
          'action': [ '<(python_path)', '<(DEPTH)/tools/run_unit_tests.py',
                      '<(RULE_INPUT_PATH)',
                      '<@(_outputs)',
                      '--abi=<(ABI_bits)',
                      '--lib=<(library)'
          ],
          'msvs_cygwin_shell': 0,
        },
      ],
    },
    {
      'target_name': 'bslmf',
      'type': '<(library)',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)',
                        'bslmf_sources', ],
      'export_dependent_settings': [ '<@(bslmf_pkgdeps)' ],
      'direct_dependent_settings': { 'include_dirs': [ '.' ] },
      # Mac OS X empty LD_DYLIB_INSTALL_NAME causes executable and shared
      # libraries linking against dylib to store same path for use at runtime
      'xcode_settings': { 'LD_DYLIB_INSTALL_NAME': '' },
    },

    {
      'target_name': 'bslmf_addconst.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_addconst.t.cpp' ],
    },
    {
      'target_name': 'bslmf_addcv.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_addcv.t.cpp' ],
    },
    {
      'target_name': 'bslmf_addlvaluereference.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_addlvaluereference.t.cpp' ],
    },
    {
      'target_name': 'bslmf_addpointer.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_addpointer.t.cpp' ],
    },
    {
      'target_name': 'bslmf_addreference.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_addreference.t.cpp' ],
    },
    {
      'target_name': 'bslmf_addrvaluereference.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_addrvaluereference.t.cpp' ],
    },
    {
      'target_name': 'bslmf_addvolatile.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_addvolatile.t.cpp' ],
    },
    {
      'target_name': 'bslmf_arraytopointer.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_arraytopointer.t.cpp' ],
    },
    {
      'target_name': 'bslmf_assert.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_assert.t.cpp' ],
    },
    {
      'target_name': 'bslmf_conditional.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_conditional.t.cpp' ],
    },
    {
      'target_name': 'bslmf_detectnestedtrait.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_detectnestedtrait.t.cpp' ],
    },
    {
      'target_name': 'bslmf_enableif.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_enableif.t.cpp' ],
    },
    {
      'target_name': 'bslmf_forwardingtype.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_forwardingtype.t.cpp' ],
    },
    {
      'target_name': 'bslmf_functionpointertraits.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_functionpointertraits.t.cpp' ],
    },
    {
      'target_name': 'bslmf_haspointersemantics.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_haspointersemantics.t.cpp' ],
    },
    {
      'target_name': 'bslmf_if.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_if.t.cpp' ],
    },
    {
      'target_name': 'bslmf_integralconstant.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_integralconstant.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isarithmetic.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isarithmetic.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isarray.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isarray.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isbitwiseequalitycomparable.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isbitwiseequalitycomparable.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isbitwisemoveable.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isbitwisemoveable.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isclass.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isclass.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isconst.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isconst.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isconvertible.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isconvertible.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isenum.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isenum.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isfloatingpoint.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isfloatingpoint.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isfunction.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isfunction.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isfundamental.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isfundamental.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isintegral.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isintegral.t.cpp' ],
    },
    {
      'target_name': 'bslmf_islvaluereference.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_islvaluereference.t.cpp' ],
    },
    {
      'target_name': 'bslmf_ismemberfunctionpointer.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_ismemberfunctionpointer.t.cpp' ],
    },
    {
      'target_name': 'bslmf_ismemberobjectpointer.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_ismemberobjectpointer.t.cpp' ],
    },
    {
      'target_name': 'bslmf_ismemberpointer.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_ismemberpointer.t.cpp' ],
    },
    {
      'target_name': 'bslmf_ispair.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_ispair.t.cpp' ],
    },
    {
      'target_name': 'bslmf_ispointer.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_ispointer.t.cpp' ],
    },
    {
      'target_name': 'bslmf_ispointertomember.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_ispointertomember.t.cpp' ],
    },
    {
      'target_name': 'bslmf_ispolymorphic.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_ispolymorphic.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isreference.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isreference.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isrvaluereference.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isrvaluereference.t.cpp' ],
    },
    {
      'target_name': 'bslmf_issame.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_issame.t.cpp' ],
    },
    {
      'target_name': 'bslmf_istriviallycopyable.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_istriviallycopyable.t.cpp' ],
    },
    {
      'target_name': 'bslmf_istriviallydefaultconstructible.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_istriviallydefaultconstructible.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isvoid.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isvoid.t.cpp' ],
    },
    {
      'target_name': 'bslmf_isvolatile.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_isvolatile.t.cpp' ],
    },
    {
      'target_name': 'bslmf_matchanytype.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_matchanytype.t.cpp' ],
    },
    {
      'target_name': 'bslmf_matcharithmetictype.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_matcharithmetictype.t.cpp' ],
    },
    {
      'target_name': 'bslmf_memberfunctionpointertraits.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_memberfunctionpointertraits.t.cpp' ],
    },
    {
      'target_name': 'bslmf_metaint.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_metaint.t.cpp' ],
    },
    {
      'target_name': 'bslmf_nestedtraitdeclaration.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_nestedtraitdeclaration.t.cpp' ],
    },
    {
      'target_name': 'bslmf_nil.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_nil.t.cpp' ],
    },
    {
      'target_name': 'bslmf_removeconst.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_removeconst.t.cpp' ],
    },
    {
      'target_name': 'bslmf_removecv.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_removecv.t.cpp' ],
    },
    {
      'target_name': 'bslmf_removecvq.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_removecvq.t.cpp' ],
    },
    {
      'target_name': 'bslmf_removepointer.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_removepointer.t.cpp' ],
    },
    {
      'target_name': 'bslmf_removereference.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_removereference.t.cpp' ],
    },
    {
      'target_name': 'bslmf_removevolatile.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_removevolatile.t.cpp' ],
    },
    {
      'target_name': 'bslmf_selecttrait.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_selecttrait.t.cpp' ],
    },
    {
      'target_name': 'bslmf_switch.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_switch.t.cpp' ],
    },
    {
      'target_name': 'bslmf_tag.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_tag.t.cpp' ],
    },
    {
      'target_name': 'bslmf_typelist.t',
      'type': 'executable',
      'dependencies': [ '../bsl_deps.gyp:bsl_grpdeps',
                        '<@(bslmf_pkgdeps)', 'bslmf' ],
      'include_dirs': [ '.' ],
      'sources': [ 'bslmf_typelist.t.cpp' ],
    },
  ],
}
