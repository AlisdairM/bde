// bdlmxxx_bdemencoderoptions.cpp   -*-C++-*-   GENERATED FILE -- DO NOT EDIT
#include <bdlmxxx_bdemencoderoptions.h>

#include <bsls_ident.h>
BSLS_IDENT_RCSID(bdlmxxx_bdemencoderoptions_cpp,"$Id$ $CSID$")

#include <bdlat_formattingmode.h>

#include <bdlb_print.h>
#include <bdlb_printmethods.h>
#include <bdlb_string.h>
#include <bsls_assert.h>

#include <bsl_cctype.h>
#include <bsl_iomanip.h>
#include <bsl_ostream.h>

namespace BloombergLP {

                    // -----------------------------
                    // class bdlmxxx::BdemEncoderOptions
                    // -----------------------------

// CONSTANTS

const char bdlmxxx::BdemEncoderOptions::CLASS_NAME[] = "bdlmxxx::BdemEncoderOptions";

const int bdlmxxx::BdemEncoderOptions::DEFAULT_BDEM_VERSION = 2;

const bdeat_AttributeInfo bdlmxxx::BdemEncoderOptions::ATTRIBUTE_INFO_ARRAY[] = {
    {
        ATTRIBUTE_ID_BDEM_VERSION,
        "BdemVersion",
        sizeof("BdemVersion") - 1,
        "",
        bdeat_FormattingMode::BDEAT_DEC
    }
};

namespace bdlmxxx {
// CLASS METHODS

const bdeat_AttributeInfo *BdemEncoderOptions::lookupAttributeInfo(
        const char *name,
        int         nameLength)
{
    switch(nameLength) {
        case 11: {
            if ((name[0]|0x20)=='b'
             && (name[1]|0x20)=='d'
             && (name[2]|0x20)=='e'
             && (name[3]|0x20)=='m'
             && (name[4]|0x20)=='v'
             && (name[5]|0x20)=='e'
             && (name[6]|0x20)=='r'
             && (name[7]|0x20)=='s'
             && (name[8]|0x20)=='i'
             && (name[9]|0x20)=='o'
             && (name[10]|0x20)=='n')
            {
                return &ATTRIBUTE_INFO_ARRAY[ATTRIBUTE_INDEX_BDEM_VERSION];
                                                                      // RETURN
            }
        } break;
    }
    return 0;
}

const bdeat_AttributeInfo *BdemEncoderOptions::lookupAttributeInfo(int id)
{
    switch (id) {
      case ATTRIBUTE_ID_BDEM_VERSION:
        return &ATTRIBUTE_INFO_ARRAY[ATTRIBUTE_INDEX_BDEM_VERSION];
      default:
        return 0;
    }
}

// ACCESSORS

bsl::ostream& BdemEncoderOptions::print(
    bsl::ostream& stream,
    int           level,
    int           spacesPerLevel) const
{
    if (level < 0) {
        level = -level;
    }
    else {
        bdlb::Print::indent(stream, level, spacesPerLevel);
    }

    int levelPlus1 = level + 1;

    if (0 <= spacesPerLevel) {
        // multiline

        stream << "[\n";

        bdlb::Print::indent(stream, levelPlus1, spacesPerLevel);
        stream << "BdemVersion = ";
        bdlb::PrintMethods::print(stream, d_bdemVersion,
                                 -levelPlus1, spacesPerLevel);

        bdlb::Print::indent(stream, level, spacesPerLevel);
        stream << "]\n";
    }
    else {
        // single line

        stream << '[';

        stream << ' ';
        stream << "BdemVersion = ";
        bdlb::PrintMethods::print(stream, d_bdemVersion,
                                 -levelPlus1, spacesPerLevel);

        stream << " ]";
    }

    return stream << bsl::flush;
}
}  // close package namespace

}  // close enterprise namespace

// GENERATED BY BLP_BAS_CODEGEN_3.0.19 Thu Jul 31 13:45:53 2008
// ----------------------------------------------------------------------------
// NOTICE:
//      Copyright (C) Bloomberg L.P., 2008
//      All Rights Reserved.
//      Property of Bloomberg L.P. (BLP)
//      This software is made available solely pursuant to the
//      terms of a BLP license agreement which governs its use.
// ------------------------------ END-OF-FILE ---------------------------------
